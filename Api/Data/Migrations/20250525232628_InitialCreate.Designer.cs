// <auto-generated />
using System;
using Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace api.Data.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20250525232628_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Api.Models.Asset", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("tas_id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnName("tas_code");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("tas_name");

                    b.Property<decimal>("Price")
                        .HasColumnName("tas_price")
                        .HasColumnType("Money");

                    b.Property<string>("TypeAssetId")
                        .IsRequired()
                        .HasColumnName("tas_type_asset_id");

                    b.HasKey("Id");

                    b.HasIndex("TypeAssetId");

                    b.ToTable("tb_asset");
                });

            modelBuilder.Entity("Api.Models.ItemOrder", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("tio_id");

                    b.Property<string>("AssetId")
                        .IsRequired()
                        .HasColumnName("tio_asset_id");

                    b.Property<string>("OrderId")
                        .IsRequired()
                        .HasColumnName("tio_order_id");

                    b.Property<int>("Quantity")
                        .HasColumnName("tio_quantity");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnName("tio_unit_price")
                        .HasColumnType("Money");

                    b.HasKey("Id");

                    b.HasIndex("AssetId");

                    b.HasIndex("OrderId");

                    b.ToTable("tb_item_order");
                });

            modelBuilder.Entity("Api.Models.Order", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("tor_id");

                    b.Property<string>("ContractNumber")
                        .IsRequired()
                        .HasColumnName("tor_contract_number");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("tor_created_at");

                    b.Property<decimal>("Discount")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("tor_discount")
                        .HasColumnType("Money")
                        .HasDefaultValue(0m);

                    b.Property<string>("SupplierId")
                        .IsRequired()
                        .HasColumnName("tor_supplier_id");

                    b.Property<decimal>("Total")
                        .HasColumnName("tor_total")
                        .HasColumnType("Money");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnName("tor_updated_at");

                    b.HasKey("Id");

                    b.HasIndex("SupplierId");

                    b.ToTable("tb_order");
                });

            modelBuilder.Entity("Api.Models.Supplier", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("tsu_id");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasColumnName("tsu_cnpj");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnName("tsu_code");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("tsu_name");

                    b.HasKey("Id");

                    b.ToTable("tb_supplier");
                });

            modelBuilder.Entity("Api.Models.TypeAsset", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("tta_id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnName("tta_code");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("tta_name");

                    b.HasKey("Id");

                    b.ToTable("tb_type_asset");
                });

            modelBuilder.Entity("Api.Models.Asset", b =>
                {
                    b.HasOne("Api.Models.TypeAsset", "TypeAsset")
                        .WithMany()
                        .HasForeignKey("TypeAssetId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Api.Models.ItemOrder", b =>
                {
                    b.HasOne("Api.Models.Asset", "Asset")
                        .WithMany()
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Api.Models.Order", "Order")
                        .WithMany("Items")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Api.Models.Order", b =>
                {
                    b.HasOne("Api.Models.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
