// <auto-generated />
using System;
using Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace api.Data.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20250525023628_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Api.Models.Asset", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("tas__id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnName("tas__code");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("tas__name");

                    b.Property<decimal>("Price")
                        .HasColumnName("tas__price")
                        .HasColumnType("Money");

                    b.Property<string>("TypeAssetId")
                        .IsRequired()
                        .HasColumnName("tas__type_asset_id");

                    b.HasKey("Id");

                    b.HasIndex("TypeAssetId");

                    b.ToTable("tb_asset");
                });

            modelBuilder.Entity("Api.Models.ItemOrder", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("tio__id");

                    b.Property<string>("AssetId")
                        .IsRequired()
                        .HasColumnName("tio__asset_id");

                    b.Property<string>("OrderId")
                        .IsRequired()
                        .HasColumnName("tio__order_id");

                    b.Property<int>("Quantity")
                        .HasColumnName("tio__quantity");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnName("tio__unit_price")
                        .HasColumnType("Money");

                    b.HasKey("Id");

                    b.HasIndex("AssetId");

                    b.HasIndex("OrderId");

                    b.ToTable("tb_item_order");
                });

            modelBuilder.Entity("Api.Models.Order", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("tor__id");

                    b.Property<string>("ContractNumber")
                        .IsRequired()
                        .HasColumnName("tor__contract_number");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("tor__created_at");

                    b.Property<decimal>("Discount")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("tor__discount")
                        .HasColumnType("Money")
                        .HasDefaultValue(0m);

                    b.Property<string>("SupplierId")
                        .IsRequired()
                        .HasColumnName("tor__supplier_id");

                    b.Property<decimal>("Total")
                        .HasColumnName("tor__total")
                        .HasColumnType("Money");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnName("tor__updated_at");

                    b.HasKey("Id");

                    b.HasIndex("SupplierId");

                    b.ToTable("tb_order");
                });

            modelBuilder.Entity("Api.Models.Supplier", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("tsu__id");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasColumnName("tsu_cnpj");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnName("tsu__code");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("tsu__name");

                    b.HasKey("Id");

                    b.ToTable("tb_supplier");
                });

            modelBuilder.Entity("Api.Models.TypeAsset", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("tta__id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnName("tta__code");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("tta__name");

                    b.HasKey("Id");

                    b.ToTable("tb_type_asset");
                });

            modelBuilder.Entity("Api.Models.Asset", b =>
                {
                    b.HasOne("Api.Models.TypeAsset", "TypeAsset")
                        .WithMany()
                        .HasForeignKey("TypeAssetId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Api.Models.ItemOrder", b =>
                {
                    b.HasOne("Api.Models.Asset", "Asset")
                        .WithMany()
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Api.Models.Order", "Order")
                        .WithMany("Items")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Api.Models.Order", b =>
                {
                    b.HasOne("Api.Models.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
